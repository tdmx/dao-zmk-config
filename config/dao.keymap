/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &extra_keys_transform;
    };
};

/ {
    behaviors {
        sks_cw: sks_cw {
            compatible = "zmk,behavior-tap-dance";
            label = "SKS_CW";
            #binding-cells = <0>;
            bindings = <&sk LSHIFT>, <&caps_word>;
        };

        kp_mod: kp_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_MOD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            flavor = "balanced";
        };

        m_accel_0: m_accel_0 {
            compatible = "zmk,behavior-mouse-move";
            label = "M_ACCEL_0";
            #binding-cells = <1>;
            acceleration-exponent = <1>;
        };

        m_accel_1: m_accel_1 {
            compatible = "zmk,behavior-mouse-move";
            label = "M_ACCEL_1";
            #binding-cells = <1>;
            acceleration-exponent = <2>;
        };

        m_accel_2: m_accel_2 {
            compatible = "zmk,behavior-mouse-move";
            label = "M_ACCEL_2";
            #binding-cells = <1>;
            acceleration-exponent = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&sks_cw         &kp Q  &kp W                 &kp E               &kp R           &kp T            &kp Y      &kp U        &kp I               &kp O    &kp P     &sks_cw
&mt LCTRL ESC   &kp A  &kp_mod LEFT_SHIFT S  &kp_mod LEFT_ALT D  &kp_mod LCMD F  &kp G            &kp H      &kp J        &kp K               &kp L    &kp SEMI  &mt RCTRL SQT
&mt LALT MINUS  &kp Z  &kp X                 &kp C               &kp V           &kp B            &kp N      &kp M        &kp COMMA           &kp DOT  &kp FSLH  &mt RALT BSLH
                                             &mt LCMD TAB        &sks_cw         &lt 1 BACKSPACE  &lt 2 RET  &lt 4 SPACE  &mt LEFT_SHIFT DEL
            >;
        };

        lower_layer {
            bindings = <
&mt LGUI F1     &kp QMARK             &kp AT_SIGN  &kp EXCL    &kp TILDE    &kp TAB            &caps_word  &caps_word  &kp UNDERSCORE  &kp QUESTION  &trans                &kp BACKSPACE
&mt LCTRL PLUS  &kp AMPERSAND         &kp STAR     &kp DOLLAR  &kp HASH     &kp DOUBLE_QUOTES  &trans      &kp PLUS    &kp EQUAL       &kp GRAVE     &kp PIPE              &trans
&mt LALT EQUAL  &kp NON_US_BACKSLASH  &kp PIPE     &kp CARET   &kp PERCENT  &trans             &trans      &kp MINUS   &kp COLON       &sk LSHIFT    &kp NON_US_BACKSLASH  &trans
                                                   &lt 3 TAB   &trans       &trans             &trans      &trans      &lt 3 DEL
            >;
        };

        raise_layer {
            bindings = <
&kp TAB   &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9   &kp KP_MINUS  &kp TAB          &kp DOLLAR    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SLCK       &trans
&trans    &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp KP_PLUS   &kp KP_DIVIDE    &kp KP_MINUS  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp BACKSPACE  &trans
&kp LALT  &kp SPACE        &kp KP_N1  &kp KP_N2  &kp KP_N3   &kp KP_COMMA  &kp KP_MULTIPLY  &kp KP_PLUS   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp RETURN     &trans
                                      &kp KP_N0  &kp KP_DOT  &lt 3 RET     &lt 3 ESC        &trans        &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&sys_reset   &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &sys_reset
                                         &trans        &none         &trans        &trans        &none         &trans
            >;
        };

        nav_layer {
            bindings = <
&trans     &trans     &mt LEFT_ALT GRAVE  &kp DELETE  &kp BACKSPACE  &trans        &trans        &kp PG_UP  &kp UP    &kp PG_DN  &trans         &trans
&trans     &trans     &kp LSHFT           &kp LALT    &kp LGUI       &kp LCTRL     &kp LCTRL     &kp LEFT   &kp DOWN  &kp RIGHT  &kp RET        &trans
&kp LSHFT  &kp LG(Z)  &kp LG(X)           &kp LG(C)   &kp LG(V)      &kp LG(LBKT)  &kp LG(RBKT)  &kp HOME   &kp TAB   &kp END    &kp LS(LG(Z))  &trans
                                          &trans      &trans         &trans        &trans        &trans     &trans
            >;

            label = "Nav";
        };

        mouse_layer {
            bindings = <
&trans  &kp LG(W)  &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans  &trans  &kp LS(LC(TAB))  &mmv MOVE_UP    &kp LC(TAB)      &kp UP_ARROW    &trans
&trans  &trans     &trans     &trans     &trans     &trans  &trans  &mmv MOVE_LEFT   &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp DOWN_ARROW  &trans
&trans  &trans     &trans     &trans     &trans     &trans  &trans  &mkp LCLK        &mkp MCLK       &mkp RCLK        &trans          &trans
                              &trans     &trans     &trans  &trans  &trans           &trans
            >;
        };
    };
};
