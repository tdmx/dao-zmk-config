/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &extra_keys_transform;
    };
};

/ {
    behaviors {
        sks_cw: sks_cw {
            compatible = "zmk,behavior-tap-dance";
            label = "SKS_CW";
            #binding-cells = <0>;
            bindings = <&sk LSHIFT>, <&caps_word>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&sks_cw         &kp Q  &kp W  &kp E      &kp R            &kp T            &kp Y      &kp U        &kp I      &kp O    &kp P     &sks_cw
&mt LCTRL ESC   &kp A  &kp S  &kp D      &kp F            &kp G            &kp H      &kp J        &kp K      &kp L    &kp SEMI  &mt RCTRL SQT
&mt LALT MINUS  &kp Z  &kp X  &kp C      &kp V            &kp B            &kp N      &kp M        &kp COMMA  &kp DOT  &kp FSLH  &mt RALT BSLH
                              &lt 2 TAB  &mt LSHFT SPACE  &lt 1 BACKSPACE  &lt 2 RET  &lt 4 SPACE  &lt 2 DEL
            >;
        };

        lower_layer {
            bindings = <
&mt LGUI F1     &kp F2    &kp F3  &kp F4     &kp F5    &kp F6     &kp F7     &kp F8    &kp F9     &kp F10   &kp F11   &kp F12
&mt LCTRL PLUS  &kp EXCL  &kp AT  &kp HASH   &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS  &kp STAR   &kp LPAR  &kp RPAR  &mt RCTRL MINUS
&mt LALT EQUAL  &kp N1    &kp N2  &kp N3     &kp N4    &kp N5     &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &kp RALT
                                  &lt 3 TAB  &trans    &trans     &trans     &trans    &lt 3 DEL
            >;
        };

        raise_layer {
            bindings = <
&kp TAB   &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9   &kp KP_MINUS  &kp TAB          &kp DOLLAR    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SLCK       &trans
&trans    &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp KP_PLUS   &kp KP_DIVIDE    &kp KP_MINUS  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp BACKSPACE  &trans
&kp LALT  &kp SPACE        &kp KP_N1  &kp KP_N2  &kp KP_N3   &kp KP_COMMA  &kp KP_MULTIPLY  &kp KP_PLUS   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp RETURN     &trans
                                      &kp KP_N0  &kp KP_DOT  &lt 3 RET     &lt 3 ESC        &trans        &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&sys_reset   &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &sys_reset
                                         &trans        &none         &trans        &trans        &none         &trans
            >;
        };

        nav_layer {
            bindings = <
&trans     &trans     &trans     &trans     &trans     &trans        &trans        &kp PG_UP  &kp UP    &kp PG_DN  &trans         &trans
&trans     &trans     &kp LSHFT  &kp LALT   &kp LGUI   &kp LCTRL     &kp LCTRL     &kp LEFT   &kp DOWN  &kp RIGHT  &kp RET        &trans
&kp LSHFT  &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LG(LBKT)  &kp LG(RBKT)  &kp HOME   &kp TAB   &kp END    &kp LS(LG(Z))  &trans
                                 &trans     &trans     &trans        &trans        &trans     &trans
            >;

            label = "Nav";
        };
    };
};
